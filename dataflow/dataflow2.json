{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_emp_scd2",
						"type": "DatasetReference"
					},
					"name": "EmpCSV"
				},
				{
					"dataset": {
						"referenceName": "ds_sql",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_sql",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "isActive"
				},
				{
					"name": "select1"
				},
				{
					"name": "SQLselect"
				},
				{
					"name": "LkpEmpid"
				},
				{
					"name": "select2"
				},
				{
					"name": "IsactiveSQL"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as short,",
				"          name as string,",
				"          city as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmpCSV",
				"source(output(",
				"          emp_key as integer,",
				"          id as integer,",
				"          name as string,",
				"          city as string,",
				"          is_active as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"EmpCSV derive(IsActive = 1) ~> isActive",
				"isActive select(mapColumn(",
				"          id,",
				"          name,",
				"          city,",
				"          is_active = IsActive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"source2 select(mapColumn(",
				"          SQL_emp_key = emp_key,",
				"          SQL_id = id,",
				"          SQL_name = name,",
				"          SQL_city = city,",
				"          SQL_is_active = is_active",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SQLselect",
				"EmpCSV, SQLselect lookup(id == SQL_id,",
				"     multiple: true,",
				"     broadcast: 'auto')~> LkpEmpid",
				"LkpEmpid select(mapColumn(",
				"          SQL_emp_key,",
				"          SQL_id,",
				"          SQL_name,",
				"          SQL_city",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive(is_active = 0) ~> IsactiveSQL",
				"IsactiveSQL alterRow(updateIf(0==0)) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          emp_key as integer,",
				"          id as integer,",
				"          name as string,",
				"          city as string,",
				"          is_active as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['emp_key'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          emp_key = SQL_emp_key,",
				"          id = SQL_id,",
				"          name = SQL_name,",
				"          city = SQL_city,",
				"          is_active",
				"     )) ~> sink1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          emp_key as integer,",
				"          id as integer,",
				"          name as string,",
				"          city as string,",
				"          is_active as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id,",
				"          name,",
				"          city",
				"     )) ~> sink2"
			]
		}
	}
}