{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-PURU-DEMO"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=adf-sqlserver-demo.database.windows.net;Initial Catalog=ADF_SQLDB;User ID=admindemo"
		},
		"ls_kv_demo_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_kv_demo'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=adf-sqlserver-demo.database.windows.net;Initial Catalog=ADF_SQLDB;User ID=admindemo"
		},
		"ls_sqldb_kv_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sqldb_kv'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=adf-sqlserver-demo.database.windows.net;Initial Catalog=ADF_SQLDB;User ID=admindemo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dsempcsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lshremp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "emp_sample.csv",
						"container": "demotraining"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/input_event')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_event",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "demotraining"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_export_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsAzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dmf_blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/output_event')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_event",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "sec-sqldb"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_kv_demo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_kv_demo_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_kv_adf_demo",
							"type": "LinkedServiceReference"
						},
						"secretName": "sec-sqldb-demo"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sqldb_kv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sqldb_kv_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "kv_sqldb_demo",
							"type": "LinkedServiceReference"
						},
						"secretName": "sec-sqldb"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfcdc1')]",
			"type": "Microsoft.DataFactory/factories/adfcdcs",
			"apiVersion": "2018-06-01",
			"properties": {
				"SourceConnectionsInfo": [
					{
						"SourceEntities": [
							{
								"name": "input",
								"properties": {
									"schema": [],
									"dslConnectorProperties": [
										{
											"name": "container",
											"value": "input"
										},
										{
											"name": "fileSystem",
											"value": "input"
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "ls_blob_event",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureBlobStorage",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "delimited"
								},
								{
									"name": "dateFormats",
									"value": [
										"MM/dd/yyyy",
										"dd/MM/yyyy",
										"yyyy/MM/dd",
										"MM-dd-yyyy",
										"dd-MM-yyyy",
										"yyyy-MM-dd",
										"dd.MM.yyyy",
										"MM.dd.yyyy",
										"yyyy.MM.dd"
									]
								},
								{
									"name": "timestampFormats",
									"value": [
										"yyyyMMddHHmm",
										"yyyyMMdd HHmm",
										"yyyyMMddHHmmss",
										"yyyyMMdd HHmmss",
										"dd-MM-yyyy HH:mm:ss",
										"dd-MM-yyyy HH:mm",
										"yyyy-M-d H:m:s",
										"yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'",
										"yyyy-M-d\\'T\\'H:m:s\\'Z\\'",
										"yyyy-M-d\\'T\\'H:m:s",
										"yyyy-MM-dd\\'T\\'HH:mm:ss",
										"yyyy-MM-dd HH:mm:ss",
										"yyyy-MM-dd HH:mm",
										"yyyy.MM.dd HH:mm:ss",
										"MM/dd/yyyy HH:mm:ss",
										"M/d/yyyy H:m:s",
										"yyyy/MM/dd HH:mm:ss",
										"yyyy/M/d H:m:s",
										"dd MMM yyyy HH:mm:ss",
										"dd MMMM yyyy HH:mm:ss",
										"d MMM yyyy H:m:s",
										"d MMMM yyyy H:m:s",
										"d-M-yyyy H:m:s",
										"d-M-yyyy H:m",
										"yyyy-M-d H:m",
										"MM/dd/yyyy HH:mm",
										"M/d/yyyy H:m",
										"yyyy/MM/dd HH:mm",
										"yyyy/M/d H:m",
										"dd MMMM yyyy HH:mm",
										"dd MMM yyyy HH:mm",
										"d MMMM yyyy H:m",
										"d MMM yyyy H:m",
										"MM-dd-yyyy hh:mm:ss a",
										"MM-dd-yyyy HH:mm:ss",
										"MM/dd/yyyy hh:mm:ss a",
										"yyyy.MM.dd hh:mm:ss a",
										"MM/dd/yyyy",
										"dd/MM/yyyy",
										"yyyy/MM/dd",
										"MM-dd-yyyy",
										"dd-MM-yyyy",
										"yyyy-MM-dd",
										"dd.MM.yyyy",
										"MM.dd.yyyy",
										"yyyy.MM.dd"
									]
								},
								{
									"name": "enableCdc",
									"value": true
								},
								{
									"name": "skipInitialLoad",
									"value": true
								},
								{
									"name": "columnNamesAsHeader",
									"value": true
								},
								{
									"name": "columnDelimiter",
									"value": ","
								},
								{
									"name": "escapeChar",
									"value": "\\\\"
								},
								{
									"name": "quoteChar",
									"value": "\\\""
								}
							]
						}
					}
				],
				"TargetConnectionsInfo": [
					{
						"TargetEntities": [
							{
								"name": "output",
								"properties": {
									"schema": [],
									"dslConnectorProperties": [
										{
											"name": "container",
											"value": "output"
										},
										{
											"name": "fileSystem",
											"value": "output"
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "ls_blob_event",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureBlobStorage",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "delimited"
								},
								{
									"name": "columnNamesAsHeader",
									"value": true
								},
								{
									"name": "columnDelimiter",
									"value": ","
								},
								{
									"name": "escapeChar",
									"value": "\\\\"
								},
								{
									"name": "quoteChar",
									"value": "\\\""
								}
							]
						},
						"DataMapperMappings": [
							{
								"targetEntityName": "output",
								"sourceEntityName": "input",
								"sourceConnectionReference": {
									"connectionName": "ls_blob_event",
									"type": "linkedservicetype"
								},
								"attributeMappingInfo": {
									"attributeMappings": []
								}
							}
						],
						"Relationships": []
					}
				],
				"Policy": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15
					},
					"mode": "Microbatch"
				},
				"allowVNetOverride": false
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Dataset name",
								"value": "Employee"
							},
							{
								"name": "Purpose",
								"value": "Testing employee data"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[RandumNumGen]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sp_demo",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('Lookup1').output.firstRow.action",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "wait 10 sec",
									"activities": [
										{
											"name": "Wait1",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 10
											}
										}
									]
								},
								{
									"value": "wait 20 sec",
									"activities": [
										{
											"name": "Wait2",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 20
											}
										}
									]
								},
								{
									"value": "wait 30 sec",
									"activities": [
										{
											"name": "Wait3",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 30
											}
										}
									]
								},
								{
									"value": "wait 40 sec",
									"activities": [
										{
											"name": "Wait4",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 40
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-05-09T03:55:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cp_csv",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_csv_event",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@pipeline().parameters.Filename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_output_event",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@pipeline().parameters.Filename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-05-02T02:26:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_emp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cp_emp_data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dsDelimitedText",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_emp_output",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete_emp",
						"description": "Deletes the file after copying",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "cp_emp_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dsDelimitedText",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "lsAzureBlobStorage",
									"type": "LinkedServiceReference"
								},
								"path": "demotraining"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.csv",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-28T03:03:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_delete_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cp_emp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dsempcsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_emp_output",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "cp_emp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dsempcsv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "lsAzureBlobStorage",
									"type": "LinkedServiceReference"
								},
								"path": "output/7361381f-71bc-4654-921c-764df871391e"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.csv",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-20T03:33:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsempcsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_emp_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cdemp",
						"description": "copying employee data from blobstorage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 300,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dsDelimitedText",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsDelimitedTextoutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-28T02:47:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_event')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "input_event",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "output_event",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-05-01T13:58:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/input_event')]",
				"[concat(variables('factoryId'), '/datasets/output_event')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_event_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_input_event",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@pipeline().parameters.Filename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_output_event_trig",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@pipeline().parameters.Filename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-05-02T03:44:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sqldb_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "List of tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from information_schema.tables\nwhere table_type='BASE TABLE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqltables_copy",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach SQL table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List of tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List of tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Export the data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_export_tables",
											"type": "DatasetReference",
											"parameters": {
												"schemaname": {
													"value": "@item().table_schema",
													"type": "Expression"
												},
												"tablename": {
													"value": "@item().table_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ls_export_blob",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@concat(item().table_schema,'_',item().table_name,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-24T02:59:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ls_export_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_variables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('FileExists')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_emp_csv",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(activity('Get Metadata1').output)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait2",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 20
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "FileExists",
													"value": "True"
												}
											}
										]
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "salary",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_emp_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_load_emp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"FileExists": {
						"type": "String",
						"defaultValue": "false"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-26T02:49:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_IN_OUT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_blob_dmf",
								"type": "DatasetReference"
							},
							"name": "Emp"
						},
						{
							"dataset": {
								"referenceName": "ds_dept_data",
								"type": "DatasetReference"
							},
							"name": "Dept"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ls_output",
								"type": "DatasetReference"
							},
							"name": "EmpOutput"
						}
					],
					"transformations": [
						{
							"name": "EmpDeptJoin"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Empid as integer,",
						"          Name as string,",
						"          Salary as integer,",
						"          Deptno as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false,",
						"     preferredIntegralType: 'integer',",
						"     booleanFormat: ['0', '1'],",
						"     partitionBy('hash', 1)) ~> Emp",
						"source(output(",
						"          Deptno as integer,",
						"          Name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     preferredIntegralType: 'integer') ~> Dept",
						"Emp, Dept join(Emp@Deptno == Dept@Deptno,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> EmpDeptJoin",
						"EmpDeptJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string",
						"     ),",
						"     partitionFileNames:['empdeptoutput.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          Empid,",
						"          Name = Emp@Name,",
						"          Salary,",
						"          Deptno = Emp@Deptno,",
						"          Deptno = Dept@Deptno,",
						"          Name = Dept@Name",
						"     ),",
						"     partitionBy('hash', 1)) ~> EmpOutput"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ls_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_blob_dmf",
								"type": "DatasetReference"
							},
							"name": "Emp"
						},
						{
							"dataset": {
								"referenceName": "ds_dept_data",
								"type": "DatasetReference"
							},
							"name": "Dept"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_output",
								"type": "DatasetReference"
							},
							"name": "Output"
						}
					],
					"transformations": [
						{
							"name": "EmpDeptJoin"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Empid as integer,",
						"          Name as string,",
						"          Salary as integer,",
						"          Deptno as integer",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     preferredIntegralType: 'integer') ~> Emp",
						"source(output(",
						"          Deptno as integer,",
						"          Name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     preferredIntegralType: 'integer') ~> Dept",
						"Emp, Dept join(Emp@Deptno == Dept@Deptno,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> EmpDeptJoin",
						"EmpDeptJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Empdeptoutput.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          Empid,",
						"          Name = Emp@Name,",
						"          Salary,",
						"          DeptName = Dept@Name",
						"     ),",
						"     partitionBy('hash', 1)) ~> Output"
					]
				}
			},
			"dependsOn": []
		}
	]
}